name: Sub. Build webtlo zip

on:
  workflow_call:
    inputs:
      WEBTLO_VERSION:
        type: string
        default: 'unknown'
      WEBTLO_SHA:
        type: string
        default: 'none'

jobs:
  build-zip:
    name: webtlo zip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          working_dir: src
          args: --ignore-platform-reqs
          dev: no

      - name: Write version
        run: |
          cd src
          cat version.json \
            | jq --arg V ${{ inputs.WEBTLO_VERSION }} '.version=$V' \
            | jq --arg SH ${{ inputs.WEBTLO_SHA }} '.sha=$SH' \
            > tmp.$$.json
          mv tmp.$$.json version.json

      - run: mkdir -p release
      - name: Build webtlo.zip
        run: |
          zip_name=webtlo.zip
          zip_dir=webtlo.local
          json_version="$zip_dir/version.json"

          cp -r "src" "$zip_dir"

          cat $json_version \
            | jq '.installation="zip"' \
            > tmp.$$.json
          mv tmp.$$.json $json_version
          
          zip -rm -9 "release/$zip_name" "$zip_dir"

          echo "Done $zip_name"

      - name: Build webtlo-win.zip
        run: |
          zip_name="webtlo-win-${{ inputs.WEBTLO_VERSION }}.zip"
          zip_dir=webtlo-win
          json_version="src/version.json"

          cat $json_version \
            | jq '.installation="standalone"' \
            > tmp.$$.json
          mv tmp.$$.json $json_version

          rm -rf $zip_dir
          mkdir -p $zip_dir/php

          # Nginx: https://nginx.org/en/download.html
          wget -nv -O nginx.zip "https://nginx.org/download/nginx-$NGINX_VERSION.zip"
          unzip -d $zip_dir nginx.zip
          mv "$zip_dir/nginx-$NGINX_VERSION" "$zip_dir/nginx"

          # PHP: https://windows.php.net/downloads Non-Thread-Safe
          PHP_RELEASES='https://windows.php.net/downloads/releases'
          PHP_RELEASE=$(curl -s "$PHP_RELEASES/releases.json" | jq -r '."8.2"."nts-vs16-x64".zip.path')

          wget -nv -O php.zip "$PHP_RELEASES/$PHP_RELEASE"
          unzip -d $zip_dir/php php.zip

          # CA certificates https://curl.se/docs/caextract.html
          wget -nv -O win/artifacts/php/ssl/cacert.pem https://curl.se/ca/cacert.pem

          # Apply overlays
          cp -vr win/artifacts/* $zip_dir/
          cp -vr win/overlay/* $zip_dir/

          # Add webtlo
          cp -r "src" "$zip_dir/nginx/wtlo"
          zip -rm -9 "release/$zip_name" "$zip_dir"

          echo "Done $zip_name"
        env:
          NGINX_VERSION: ${{ vars.NGINX_VERSION || '1.24.0' }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: releases
          path: release/*.zip
          retention-days: 7

      - name: Cache release
        if: ${{ github.ref_type == 'tag' }}
        uses: actions/cache@v4
        with:
          path: ./release
          key: ${{ github.ref_type }}-${{ github.sha }}-release
